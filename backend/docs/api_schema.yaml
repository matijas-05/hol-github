openapi: 3.0.3
info:
  title: API
  version: 1.0.0
paths:
  # /api/game/new:
  #   post:
  #     summary: Start a new game
  #     responses:
  #       200:
  #         description: OK
  #         content:
  #           multipart/form-data:
  #             schema:
  #               type: object
  #               properties:
  #                 left_image:
  #                   type: string
  #                   format: binary
  #                 right_image:
  #                   type: string
  #                   format: binary
  #                 repos:
  #                   type: object
  #                   properties:
  #                     left:
  #                       type: object
  #                       properties:
  #                         name:
  #                           type: string
  #                     right:
  #                       type: object
  #                       properties:
  #                         name:
  #                           type: string
  #
  # /api/game/choose:
  #   post:
  #     summary: Submit choice
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               choice:
  #                 type: string
  #                 enum: [ left, right ]
  #     responses:
  #       422:
  #         description: Player tried to submit a choice without starting a game
  #       200:
  #         description: OK
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 result:
  #                   type: string
  #                   enum: [ correct, wrong ]
  #                 next:
  #                   required: [ ]
  #                   type: object
  #                   properties:
  #                     next_image:
  #                       type: string
  #                       format: binary
  #                     next_repo:
  #                       type: object
  #                       properties:
  #                         name:
  #                           type: string

  /api/user/signup:
    post:
      summary: Sign up a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ username, password ]
              properties:
                username:
                  type: string
                  maxLength: 255
                password:
                  type: string
                  pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$'
                  maxLength: 255
      responses:
        200:
          description: OK
        409:
          description: Username already exists
        400:
          description: Invalid password

  /api/user/signin:
    post:
      summary: Sign in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ username, password ]
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: OK
        401:
          description: Invalid username or password

  /api/user/signout:
    post:
      summary: Sign out
      responses:
        200:
          description: OK
        401:
          description: User not logged in